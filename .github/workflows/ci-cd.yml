name: Build and Deploy

on:
  push:
    branches: [ "be/develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      - name: Gradle Wrapper로 빌드
        run: ./gradlew bootJar
        working-directory: ./backend

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v3

      - name: 이미지 빌드 및 푸시
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          build-args: |
            SPRING_ACTIVE_PROFILE=dev

  deploy:
    needs: build
    runs-on: [self-hosted, linux, ARM64]
    environment: dev
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true

      - name: 서브모듈 최신화
        run: |
          git submodule update --remote

      - name: Docker Compose 파일 복사
        run: |
          sudo cp ./backend/backend-submodule/docker/docker-compose.dev.yml /home/ubuntu/docker/docker-compose.yml

      - name: EC2 배포
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          cd /home/ubuntu/docker
          docker-compose down
          docker-compose up -d --build
          docker image prune -f
